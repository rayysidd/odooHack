import { HMSMediaStream } from './HMSMediaStream';
import HMSPublishConnection from '../../connection/publish/publishConnection';
import { SimulcastLayer } from '../../interfaces';
import { HMSAudioTrackSettings, HMSVideoTrackSettings } from '../settings';
import { HMSLocalTrack } from '../tracks';
export declare class HMSLocalStream extends HMSMediaStream {
    /** Connection set when publish is called for the first track */
    private readonly TAG;
    private connection;
    setConnection(connection: HMSPublishConnection): void;
    addTransceiver(track: HMSLocalTrack, simulcastLayers: SimulcastLayer[]): RTCRtpTransceiver;
    setMaxBitrateAndFramerate(track: HMSLocalTrack, updatedSettings?: HMSAudioTrackSettings | HMSVideoTrackSettings): Promise<void>;
    setPreferredCodec(_transceiver: RTCRtpTransceiver, _kind: string): void;
    replaceStreamTrack(track: MediaStreamTrack, withTrack: MediaStreamTrack): void;
    removeSender(track: HMSLocalTrack): void;
    private getTrackEncodings;
}
