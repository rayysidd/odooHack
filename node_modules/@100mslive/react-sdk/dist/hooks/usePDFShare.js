import{__awaiter as r}from"../node_modules/tslib/tslib.es6.mjs.js";import{useRef as e,useState as o,useCallback as t,useEffect as n}from"react";import{useScreenShare as i}from"./useScreenShare.js";import s,{pdfIframeURL as u,isChromiumBased as a}from"../utils/commons.js";const c=c=>{const l=e(null),[f,m]=o(!1),d=t((()=>{throw new Error("unable to start screen share")}),[]),h=e(!1),{amIScreenSharing:w,toggleScreenShare:p}=i(d),v=s(w),S=t((r=>{var e;l.current&&(null===(e=l.current.contentWindow)||void 0===e||e.postMessage({theme:2,file:r},"*"))}),[]),g=t((()=>r(void 0,void 0,void 0,(function*(){w&&(yield null==p?void 0:p())}))),[w,p]),b=t((e=>r(void 0,void 0,void 0,(function*(){if(h.current)return;if(!e)throw new Error("File or url not found");if(w)throw new Error("You are already sharing");if(!l.current)throw new Error("Attach a reference `iframeRef` to iframe for sharing");l.current.src=`${u}${"string"==typeof e?`?file=${e}`:""}`,l.current.onload=()=>{requestAnimationFrame((()=>{e instanceof File&&S(e)}))},h.current=!0,m(!0);const r=window.self!==window.top;yield null==p?void 0:p({forceCurrentTab:a&&!r,cropElement:l.current,preferCurrentTab:a&&!r})}))),[w,S,p]);return n((()=>{v&&!w&&(null==c||c(),l.current&&l.current.removeAttribute("src"),h.current=!1,m(!1))}),[w,v,c]),{startPDFShare:b,stopPDFShare:g,iframeRef:l,isPDFShareInProgress:f}};export{c as usePDFShare};
//# sourceMappingURL=usePDFShare.js.map
