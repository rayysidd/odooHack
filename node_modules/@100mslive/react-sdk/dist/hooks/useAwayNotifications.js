import{__awaiter as i}from"../node_modules/tslib/tslib.es6.mjs.js";import{useCallback as o}from"react";import{selectLocalPeerRoleName as t}from"@100mslive/hms-video-store";import{useHMSVanillaStore as e}from"../primitives/HmsRoomProvider.js";const n=()=>{const n=e();return{requestPermission:o((()=>i(void 0,void 0,void 0,(function*(){if(!("Notification"in window)||navigator.webdriver)return void console.debug("Request Permsissions : Notifications not supported or headless browser");if("granted"===(null===Notification||void 0===Notification?void 0:Notification.permission)||"denied"===(null===Notification||void 0===Notification?void 0:Notification.permission))return;const o=n.subscribe((t=>i(void 0,void 0,void 0,(function*(){t&&"__internal_recorder"!==t&&(yield Notification.requestPermission(),null==o||o())}))),t)}))),[n]),showNotification:o(((i,o)=>{if(!("Notification"in window))return void console.debug("Show Notifications: Notifications not supported or headless browser");if("denied"===(null===Notification||void 0===Notification?void 0:Notification.permission)||"visible"===document.visibilityState&&document.hasFocus())return;const t=new Notification(i,o),e=()=>{"visible"===document.visibilityState&&document.hasFocus()&&(null==t||t.close(),document.removeEventListener("visibilitychange",e))};document.addEventListener("visibilitychange",e)}),[])}};export{n as useAwayNotifications};
//# sourceMappingURL=useAwayNotifications.js.map
