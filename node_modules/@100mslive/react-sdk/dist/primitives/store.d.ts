import React from 'react';
import { EqualityChecker, StateSelector } from 'zustand';
import { HMSActions, HMSNotifications, HMSStatsStore, HMSStore, IStoreReadOnly } from '@100mslive/hms-video-store';
export interface IHMSReactStore<S extends HMSStore | HMSStatsStore> extends IStoreReadOnly<S> {
    <U>(selector: StateSelector<S, U>, equalityFn?: EqualityChecker<U>): U;
}
export declare const hooksErrorMessage = "It seems like you forgot to add your component within a top level HMSRoomProvider, please refer to 100ms react docs(https://www.100ms.live/docs/javascript/v2/how-to-guides/install-the-sdk/integration#react-hooks) to check on the required steps for using this hook. If the provider is present\n  at the top level, check the yarn.lock/package-lock.json, if there are multiple versions of @100mslive/react-sdk. Please ensure the versions of @100mslive/react-sdk and @100mslive/roomkit-react are the same versions from the release notes(https://www.100ms.live/docs/javascript/v2/changelog/release-notes) that you are trying to update to.";
export interface HMSContextProviderProps {
    actions: HMSActions;
    store: IHMSReactStore<HMSStore>;
    notifications?: HMSNotifications;
    statsStore?: IHMSReactStore<HMSStatsStore>;
}
export declare function makeHMSStoreHook(hmsContext: React.Context<HMSContextProviderProps | null>): <StateSlice>(selector: StateSelector<HMSStore, StateSlice>, equalityFn?: EqualityChecker<StateSlice>) => StateSlice;
export declare function makeHMSStatsStoreHook(hmsContext: React.Context<HMSContextProviderProps | null>): <StateSlice>(selector: StateSelector<HMSStatsStore, StateSlice>, equalityFn?: EqualityChecker<StateSlice>) => StateSlice | undefined;
